@name "Writerly - Wannabe";
@author "Alex Armstrong (@alehandrof)";

/* !Colors */

@import "colors/solarized";
@import "colors/writer_pro";
$green:           #859900;
$error:           $bright-magenta; // used for testing purposes
$caret:           $bright-blue;
$page:            hsl(0, 0, 96.5%); // #f6f6f6; // #F9F7F2; // #f5f2eb;
$page-text:       hsl(hue(invert($page)), saturation(invert($page)), 24%); // $gray2;  // "#3d3d3d"
$gray-very-light: lighten($page-text, 62%); // #dbdbdb;
$gray-light:      lighten($page-text, 38%); // mix($page-text, $page, 47.5%); // "#9e9e9e"
$gray-dark:       lighten($page-text, 14%); // mix($page-text, $page, 80.5%); // "#616161"
$gutter:          hsla(0,0,0, 0.0275); //desaturate(darken($page, 3), 3); // "#eeeeee"
$gutter-text:     $gray-light;

@import "components/colors_and_styles";

/* ! Basic Settings */

* {
	caret:            $caret;
	background:       $page;
	foreground:       $page-text;
	gutter:           $gutter;
	gutterForeground: $gutter-text;
	lineHighlight:    $gutter;
	invisibles:       $error; // doesn't do anything in ST2/3

	/* Guides */
	guide:       $gray-very-light;
	activeGuide: $gray-light;
	stackGuide:  $gray-very-light;

	/* Selection */
	selection:         transparentize($caret, .85); // '#00aeff22';
	selectionBorder:   transparentize($caret, .38); // '#00aeff55';
	inactiveSelection: $gutter; // '#9e9e9e33';

	/* Find */
	findHighlight:           lighten($yellow, 38%); // ~ '#ffc71977';
	findHighlightForeground: darken($yellow, 15%); // ~ #684f00;

	/* Brackets & Tags */
	// See also: https://www.sublimetext.com/forum/viewtopic.php?f=2&t=3007#p14196
	bracketContentsForeground: $caret;
	bracketContentsOptions:    underline;
	bracketsForeground:        $caret;
	bracketsOptions:           underline;
	tagsForeground:            $caret;
	tagsOptions:               underline;

	/* Shadow */
	shadow:      $gutter-text;
	shadowWidth: "4";
}


/* ! Core Selectors */

comment {
	foreground: $gray-light;
}

constant {
	&.character,
	&.language,
	&.numeric,
	&.other {
		foreground: $violet;
	}

	&.character.escape {
		foreground: $violet;
	}
}

entity {
	&.name.tag {
		foreground: $magenta;
	}
	&.name.class,
	&.name.function,
	&.other.attribute-name,
	&.other.inherited-class {
		foreground: $green;
	}

	&.name.class,
	&.other.inherited-class {
		@include style(italic);
	}
}

invalid {
	@include bg($red);

	&.deprecated {
		@include bg($magenta);
	}
}

keyword {
	foreground: $magenta;
}

markup {
	&.separator,
	&.strikethrough,
	&.comment {
		foreground: $gray-light;
	}

	&.raw,
	&.quote {
		foreground: $gray-dark;
	}

	&.underline.link {
		foreground: $blue;
		&.reference {
			foreground: $violet;
		}
	}

	&.italic,
	&.quote {
		@include style(italic);
	}

	&.heading,
	&.bold,
	&.quote markup.italic markup.bold,
	&.quote markup.bold markup.italic {
		@include style(bold);
	}

	&.bold markup.italic,
	&.italic markup.bold,
	&.quote markup.bold,
	&.heading markup.italic {
		@include style(bold italic);
	}

	&.quote markup.italic {
		@include style(none);
	}
}

storage {
	foreground: $magenta;
	&.type {
		@include style(italic);
		foreground: $blue;
	}
}

string  {
	foreground: $orange;

	&.addition {
		foreground: $green;
	}
}

support {
	&.class,
	&.constant,
	&.function,
	&.type {
		foreground: $blue;
	}

	&.class,
	&.type {
		@include style(italic);
	}

	&.other.variable {
		@include style(none); // why is this needed?
	}
}

variable {
	&.other,
	&.parameter {
		foreground: $orange;
	}

	&.parameter {
		@include style(italic);
	}
}


/* ! Syntax: Markdown (Typewriter) & other custom stuff */

text.html.markdown punctuation {
	// @include style(bold);
	foreground: $gray-light;
	@include style(none);
}

markup {
	&.strikethrough {
		@include bg($gray-light);
	}
}

string.other.link {
	&.inline {
		foreground: $page-text;
	}

	&.title {
		foreground: $gray-dark;
	}
}

constant.character.hard-line-break {
	@include bg($violet);
}

/* ! Plugin: GitGutter & Syntax: Markdown (Typewriter), Critic Markup */

markup {
	&.changed {
		foreground: $yellow; // $violet (gitgutter)
	}

	&.deleted {
		foreground: $red; // $magenta (gitgutter)
	}

	&.ignored,
	&.untracked {
		foreground: $gray-dark;
	}

	&.inserted  {
		// @include style(italic);
		foreground: $green;
	}

	&.highlight {
		foreground: $violet;
	}
}


/* ! Syntax: Diff */

meta.diff {
	&.header {
		background: $gutter;
		&.from-file {
			foreground: $red;
		}
		&.to-file {
			foreground: $green;
		}
	}
	markup {
		&.deleted {
			foreground: $page-text;
			@include bg($red, 1);
		}
		&.inserted  {
			foreground: $page-text;
			@include bg($green, 1);
		}
	}
}


/* ! Syntax: Find in Files */

entity.name.filename.find-in-files {
	foreground: $blue;
}

constant.numeric.line-number.find-in-files '-' match {
	foreground: $magenta;
}


/* ! Plugin: SublimeLinter */

sublimelinter.mark.warning {
	@name "SublimeLinter Warning";
	foreground: $yellow; // was: #DDB700;
}

sublimelinter.mark.error {
	@name "SublimeLinter Error";
	foreground: $red; // was: #D02000
}

sublimelinter.gutter-mark {
	@name "SublimeLinter Gutter Mark";
	foreground: $gray-dark; // was: #FFFFFF
}

/* ! Plugin: Bracket Highlighter */

brackethighlighter.default,
brackethighlighter.curly,
brackethighlighter.round,
brackethighlighter.square,
brackethighlighter.angle,
brackethighlighter.tag,
brackethighlighter.quote {
	foreground: $cyan;
}

brackethighlighter.unmatched {
	foreground: $red;
}

// brackethighlighter.quote {
// 	foreground: $gray-dark;
// }


/* ! Plugin: RawLineEdit */

glyph.carriage-return,
glyph.new-line {
	foreground: $cyan;
}
