@name "Writerly - Wannabe (Light)";
@author "Alex Armstrong";

// Colors
@import "colors/solarized";
$green:   #859900;
$hotpink: #fe57a1; // used for testing purposes
$hotblue: #00aeff; // used for the caret and other shiny things

$caret:           $hotblue;
$page:            hsl(0, 0, 96.5%); // #f6f6f6; // #F9F7F2; // #f5f2eb;
$page-text:       hsl(hue(invert($page)), saturation(invert($page)), 24%); // $gray2;  // "#3d3d3d"
$gray-very-light: lighten($page-text, 62%); // #dbdbdb;
$gray-light:      lighten($page-text, 38%); // mix($page-text, $page, 47.5%); // "#9e9e9e"
$gray-dark:       lighten($page-text, 14%); // mix($page-text, $page, 80.5%); // "#616161"
$gutter:          hsla(0,0,0, 0.0275); //desaturate(darken($page, 3), 3); // "#eeeeee"
$gutter-text:     $gray-light;

// $gutter:  // complement($caret); //"#ffc71977";

$bg-fade: 0.76;

* {
	caret:            $caret;
	background:       $page;
	foreground:       $page-text;
	gutter:           $gutter;
	gutterForeground: $gutter-text;
	lineHighlight:    $gutter;
	invisibles:       $hotpink; // doesn't do anything

	/* Guides */
	guide:       $gray-very-light;
	activeGuide: $gray-light;
	stackGuide:  $gray-very-light;

	/* Selection */
	selection:         transparentize($caret, .85); //'#00aeff22';
	selectionBorder:   transparentize($caret, .38); // '#00aeff55';
	inactiveSelection: $gutter; // '#9e9e9e33';

	/* Find */
	findHighlight:           lighten($yellow, 38%); // ~ '#ffc71977';
	findHighlightForeground: darken($yellow, 15%); // ~ #684f00;

	/* Brackets & Tags */
	// See also: https://www.sublimetext.com/forum/viewtopic.php?f=2&t=3007#p14196
	bracketContentsForeground: $caret;
	bracketContentsOptions: underline;
	bracketsForeground: $caret;
	bracketsOptions: underline;
	tagsForeground: $caret;
	tagsOptions: underline;

	/* Shadow */
	shadow: $gutter-text;
	shadowWidth: "4";
}


/* Styles by Color */

string.other.link.inline {
	@name "Black";
	foreground: $page-text;
}

color.gray,
comment,
meta.diff,
meta.diff.header,
text.html.markdown punctuation,
markup.separator,
markup.strikethrough,
markup.comment {
	@name "Gray (Light)";
	foreground: $gray-light;
}

color.darkgray,
style.bold,
markup.heading,
markup.bold,
markup.quote markup.italic markup.bold,
markup.raw,
markup.quote,
string.other.link.title,
punctuation.definition.list.task.checkbox.incomplete,
markup.all-caps {
	@name "Gray (Dark)";
	foreground: $gray-dark;
}

color.yellow,
markup.changed {
	@name "Yellow";
	foreground: $yellow;
}

color.orange,
string,
variable.parameter,
variable.other {
	@name "Orange";
	foreground: $orange;
}

color.red,
markup.deleted {
	@name "Red";
	foreground: $red;
}

color.magenta,
keyword,
storage,
entity.name.tag
constant.numeric.line-number.find-in-files '-' match {
	@name "Magenta";
	foreground: $magenta;
}

color.purple,
constant.numeric,
constant.language,
constant.character,
constant.other,
markup.underline.link.reference,
markup.highlight,
constant.character.escape {
	@name "Violet";
	foreground: $violet;
}

color.blue,
storage.type,
support.function,
support.constant,
support.type,
support.class,
entity.name.filename.find-in-files,
markup.underline.link {
	@name "Blue";
	foreground: $blue;
}

color.cyan {
	@name "Cyan";
	foreground: $cyan;
}

color.green,
entity.name.class,
entity.other.inherited-class,
entity.name.function,
entity.other.attribute-name,
markup.inserted,
string.addition {
	@name "Green";
	foreground: $green;
}

/* Reversed Colors */

bgcolor.gray,
markup.strikethrough {
	@name "Reversed Gray (Light)";
	background: transparentize($gray-light, $bg-fade);
}

bgcolor.darkgray {
	@name "Reversed Gray (Dark)";
	background: transparentize($gray-dark, $bg-fade);
}

bgcolor.yellow {
	@name "Reversed Yellow";
	background: transparentize($yellow, $bg-fade);
}

bgcolor.orange {
	@name "Reversed Orange";
	background: transparentize($orange, $bg-fade);
}

bgcolor.red,
invalid {
	@name "Reversed Red";
	background: transparentize($red, $bg-fade);
}

bgcolor.magenta,
invalid.deprecated {
	@name "Reversed Magenta";
	background: transparentize($magenta, $bg-fade);
}

bgcolor.violet,
constant.character.hard-line-break {
	@name "Reversed Violet";
	background: transparentize($violet, $bg-fade);
}

bgcolor.blue {
	@name "Reversed Blue";
	background: transparentize($blue, $bg-fade);
}

bgcolor.cyan {
	@name "Reversed Cyan";
	background: transparentize($cyan, $bg-fade);
}

bgcolor.green {
	@name "Reversed Green";
	background: transparentize($green, $bg-fade);
}

/* Styles by Font */

// Bold
style.bold,
markup.heading,
markup.bold,
markup.quote markup.italic markup.bold,
markup.quote markup.bold markup.italic,
markup.all-caps {
	@name "Bold";
	fontStyle: bold;
}
/* text.html.markdown punctuation */

style.italic,
storage.type,
support.type,
support.class,
variable.parameter,
markup.italic,
markup.quote {
	@name "Italic";
	fontStyle: italic;
}

style.underline,
entity.name.class,
entity.other.inherited-class,
markup.inserted {
	@name "Underline";
	fontStyle: underline;
}


style.bold.italic,
markup.bold markup.italic,
markup.italic markup.bold,
markup.quote markup.bold,
markup.heading markup.italic {
	@name "Bold & Italic";
	fontStyle: italic bold;
}

style.italic.underline,
entity.other.inherited-class {
	@name "Italic & Underline";
	fontStyle: italic underline;
}

style.none,
support.other.variable,
markup.quote markup.italic,
text.html.markdown punctuation {
	@name "No Font Style (Roman)";
	// fontStyle: " ";
}
