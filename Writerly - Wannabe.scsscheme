@name "Writerly - Light";
@author "Alex Armstrong";


/*
- Page:
	- #F4F1EB
	- #f5f2eb
	- #F5F2EC

- Cyan: #23C897
- Berry: #E41E91
- Gray: #999999
- Blue: #2DAEE1
	- Orange: #e1602d
	- Green: #54e12d; #aee12d
	- Purple: #ba2de1
	- Pink: #e12dae ; #e12d66
	- Yellow: #e1cc2d
	- Cyan: #2de1a8 ; #2de1cc
	- Dark Blue: #2d42e1; #2d66e1
*/


// Old


// Colors
$hotpink: #fe57a1;
$gray9a: hsl(0, 0, 94%);
$gray9b: hsl(0, 0, 91%);
$gray8:  hsl(0, 0, 85%);
$gray7:  hsl(0, 0, 76%);
$gray6:  hsl(0, 0, 62%);
$gray3:  hsl(0, 0, 38%);
$gray2:  hsl(0, 0, 24%);
$gray1:  hsl(0, 0, 15%);
$gray0a: hsl(0, 0, 9%);
$gray0b: hsl(0, 0, 6%);

// $cyan: #23C897;
// $berry: #E41E91;
// $gray: #999999;
// $blue: #2DAEE1;

$blue: #268bd2;
$cyan: #2aa198;
$gray-dark: #616161;
$gray-light: #9e9e9e; // same as: gutter-text
$green: #738d00;
$magenta: #d33682;
$orange: #cb4b16;
$red: #dc322f;
$violet: #6c71c4;
$yellow: #b58900;

$caret: $blue;

// $page:     hsl(0, 0, 96.5%);
$page:        #f6f6f6; // #f5f2eb;
$page-text:   invert($page); // $gray2;
$gutter:      darken($page, 6); // "#eeeeee"
$gutter-text: lighten($page-text, 38); // "#9e9e9e"

$bg-fade: 0.76;

* {
	caret: $caret;
	background: $page;
	foreground: $page-text;
	gutter: $gutter;
	gutterForeground: $gutter-text;
	lineHighlight: $gutter;
	invisibles: $hotpink; // doesn't do anything

	/* Guides */
	guide:       transparentize($page-text, .85); // '#9e9e9e66';
	activeGuide: transparentize($page-text, .62); // '#61616166';
	stackGuide:  transparentize($page-text, .85); // '#9e9e9e66';

	/* Selection */
	selection: transparentize($caret, .85); //'#00aeff22';
	selectionBorder: transparentize($caret, .24); // '#00aeff55';
	inactiveSelection: '#9e9e9e33';

	/* Find */
	findHighlight: '#ffc71977';
	findHighlightForeground: #684f00;

	/* Brackets & Tags */
	// See also: https://www.sublimetext.com/forum/viewtopic.php?f=2&t=3007#p14196
	bracketContentsForeground: $caret;
	bracketContentsOptions: underline;
	bracketsForeground: $caret;
	bracketsOptions: underline;
	tagsForeground: $caret;
	tagsOptions: underline;

	/* Shadow */
	shadow: $gutter-text;
	shadowWidth: "4";
}


/* Styles by Color */

string.other.link.inline
{
	name: "Black";
	foreground: $page-text;
}

color.gray,
comment,
meta.diff,
meta.diff.header,
text.html.markdown punctuation,
markup.separator,
markup.strikethrough,
markup.comment
{
	name: "Gray (Light)";
	foreground: $gray-light;
}

color.darkgray,
style.bold,
markup.heading,
markup.bold,
markup.quote markup.italic markup.bold,
markup.raw,
markup.quote,
string.other.link.title,
punctuation.definition.list.task.checkbox.incomplete,
markup.all-caps
{
	name: "Gray (Dark)";
	foreground: $gray-dark;
}

color.yellow,
markup.changed
{
	name: "Yellow";
	foreground: $yellow;
}

color.orange,
string,
variable.parameter,
variable.other
{
	name: "Orange";
	foreground: $orange;
}

color.red,
markup.deleted
{
	name: "Red";
	foreground: $red;
}

color.magenta,
keyword,
storage,
entity.name.tag/*,
constant.numeric.line-number.find-in-files - match*/
{
	name: "Magenta";
	foreground: $magenta;
}

color.purple,
constant.numeric,
constant.language,
constant.character,
constant.other,
markup.underline.link.reference,
markup.highlight,
constant.character.escape
{
	name: "Violet";
	foreground: $violet;
}

color.blue,
storage.type,
support.function,
support.constant,
support.type,
support.class,
entity.name.filename.find-in-files,
markup.underline.link
{
	name: "Blue";
	foreground: $blue;
}

color.cyan
{
	name: "Cyan";
	foreground: $cyan;
}

color.green,
entity.name.class,
entity.other.inherited-class,
entity.name.function,
entity.other.attribute-name,
markup.inserted,
string.addition
{
	name: "Green";
	foreground: $green;
}

/* Reversed Colors */

bgcolor.gray,
markup.strikethrough
{
	name: "Reversed Gray (Light)";
	background: transparentize($gray-light, $bg-fade);
}

bgcolor.darkgray
{
	name: "Reversed Gray (Dark)";
	background: transparentize($gray-dark, $bg-fade);
}

bgcolor.yellow
{
	name: "Reversed Yellow";
	background: transparentize($yellow, $bg-fade);
}

bgcolor.orange
{
	name: "Reversed Orange";
	background: transparentize($orange, $bg-fade);
}

bgcolor.red,
invalid
{
	name: "Reversed Red";
	background: transparentize($red, $bg-fade);
}

bgcolor.magenta,
invalid.deprecated
{
	name: "Reversed Magenta";
	background: transparentize($magenta, $bg-fade);
}

bgcolor.violet,
constant.character.hard-line-break
{
	name: "Reversed Violet";
	background: transparentize($violet, $bg-fade);
}

bgcolor.blue
{
	name: "Reversed Blue";
	background: transparentize($blue, $bg-fade);
}

bgcolor.cyan
{
	name: "Reversed Cyan";
	background: transparentize($cyan, $bg-fade);
}

bgcolor.green
{
	name: "Reversed Green";
	background: transparentize($green, $bg-fade);
}

/* Styles by Font */

// Bold
style.bold,
markup.heading,
markup.bold,
markup.quote markup.italic markup.bold,
markup.quote markup.bold markup.italic,
markup.all-caps {
	name: "Bold";
	fontStyle: bold;
}
/* text.html.markdown punctuation */

style.italic,
storage.type,
support.type,
support.class,
variable.parameter,
markup.italic,
markup.quote {
	name: "Italic";
	fontStyle: italic;
}

style.underline,
entity.name.class,
entity.other.inherited-class,
markup.inserted {
	name: "Underline";
	fontStyle: underline;
}


style.bold.italic markup.bold markup.italic,
markup.italic markup.bold,
markup.quote markup.bold,
markup.heading markup.italic {
	name: "Bold & Italic";
	fontStyle: italic bold;
}

style.italic.underline,
entity.other.inherited-class {
	name: "Italic & Underline";
	fontStyle: italic underline;
}

style.none,
support.other.variable,
markup.quote markup.italic,
text.html.markdown punctuation {
	name: "No Font Style (Roman)";
	// fontStyle: " ";
}
